% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uniModelFit.R
\name{uniModelFit}
\alias{uniModelFit}
\title{Fit a Univaraite State-Space Model via Expectation-Maximization Algorithm}
\usage{
uniModelFit(
  data,
  uniModel,
  acceleration = FALSE,
  maxit = 3000,
  abstol = 1e-04,
  log.switch = TRUE,
  verbose = 1
)
}
\arguments{
\item{data}{Matrix of intraday signal of size n_bin * n_day without any missing values.}

\item{uniModel}{Univariate model list object from function \code{uniModelSpec}.}

\item{acceleration}{Logical value indicating whether to use the accelerated EM algorithm. If \code{TRUE}, the accelerated one will be used (default is \code{FALSE}).}

\item{maxit}{Maximum number of iterations (default is \code{3000}).}

\item{abstol}{Absolute tolerance for parameters' change \eqn{\|\Delta \boldsymbol{\Theta}_i\|}{||\Delta \Theta(i)||} as the stopping criteria (default is \code{1e-4}).}

\item{log.switch}{Logical value indicating whether to record the history of convergence progress. 
If \code{TRUE}, the intermediate parameters are recorded during the algorithm (default is \code{TRUE}).}

\item{verbose}{An integer specifying the print level of information during the algorithm (default is \code{1}). Possible numbers:
\itemize{\item{\code{"0"}: no output;}
    \item{\code{"1"}: show the iteration number and \eqn{\|\Delta \boldsymbol{\Theta}_i\|}{||\Delta \Theta(i)||};}
    \item{\code{"2"}: 1 + show the final parameters.}}}
}
\value{
A list containing the following elements (if the algorithm converges):
        \item{\code{par}}{List of parameters' fitted values.}
        \item{\code{par_log}}{List of intermediate parameters' values if \code{log.switch = TRUE}.} 
        \item{\code{fit_request}}{List of logical values indicating whether the parameters require further fitting.}
}
\description{
The main function for fitting a univaraite state-space model by using expectation-maximization (EM) algorithms. 
The implementation follows (Chen et al., 2016), and the accelerated scheme is provided in (Varadhan and Roland, 2008).
The algorithm terminates when \code{maxit} is reached or the condition \eqn{\|\Delta \boldsymbol{\Theta}_i\| \le \text{abstol}}{||\Delta \Theta(i)|| <= abstol} is satisfied.
}
\examples{
# fit the model to AAPL_volume
data(AAPL_volume)
model <- uniModelSpec(fit = TRUE)
model_fitted <- uniModelFit(AAPL_volume, model, acceleration = TRUE, 
                  maxit = 1000, abstol = 1e-4, log.switch = TRUE)

}
\references{
Chen, R., Feng, Y., and Palomar, D. (2016). Forecasting intraday trading volume: A kalman filter approach. Available at SSRN 3101695.

Varadhan, R., and Roland, C. (2008). Simple and globally convergent methods for accelerating the convergence of any EM algorithm. 
Scandinavian Journal of Statistics, 35(2), 335â€“353.
}
\seealso{
\code{\link{uniModelSpec}}
}
